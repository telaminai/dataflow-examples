# JMH version: 1.37
# VM version: JDK 21.0.5, OpenJDK 64-Bit Server VM, 21.0.5+11-LTS
# VM invoker: /Users/greghiggins/.sdkman/candidates/java/21.0.5-tem/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=51847 -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 2 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.telamin.fluxtion.example.compile.aot.jmh.PriceLadderBenchmark.throughPut_BranchingProcessor

# Run progress: 0.00% complete, ETA 00:04:00
# Warmup Fork: 1 of 1
# Warmup Iteration   1: Do Setup
TearDown - generate new random price ladders
49225703.626 ops/s
# Warmup Iteration   2: TearDown - generate new random price ladders
49425848.066 ops/s
Iteration   1: TearDown - generate new random price ladders
48404679.869 ops/s
Iteration   2: TearDown - generate new random price ladders
48672733.577 ops/s

# Run progress: 16.67% complete, ETA 00:03:22
# Fork: 1 of 1
# Warmup Iteration   1: Do Setup
TearDown - generate new random price ladders
48980068.691 ops/s
# Warmup Iteration   2: TearDown - generate new random price ladders
48773849.912 ops/s
Iteration   1: TearDown - generate new random price ladders
48064621.632 ops/s
Iteration   2: TearDown - generate new random price ladders
48464366.103 ops/s


Result "com.telamin.fluxtion.example.compile.aot.jmh.PriceLadderBenchmark.throughPut_BranchingProcessor":
  48264493.868 ops/s


# JMH version: 1.37
# VM version: JDK 21.0.5, OpenJDK 64-Bit Server VM, 21.0.5+11-LTS
# VM invoker: /Users/greghiggins/.sdkman/candidates/java/21.0.5-tem/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=51847 -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 2 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.telamin.fluxtion.example.compile.aot.jmh.PriceLadderBenchmark.avgTime_BranchingProcessor

# Run progress: 33.33% complete, ETA 00:02:42
# Warmup Fork: 1 of 1
# Warmup Iteration   1: Do Setup
TearDown - generate new random price ladders
19.593 ns/op
# Warmup Iteration   2: TearDown - generate new random price ladders
20.727 ns/op
Iteration   1: TearDown - generate new random price ladders
20.866 ns/op
Iteration   2: TearDown - generate new random price ladders
21.010 ns/op

# Run progress: 50.00% complete, ETA 00:02:01
# Fork: 1 of 1
# Warmup Iteration   1: Do Setup
TearDown - generate new random price ladders
19.839 ns/op
# Warmup Iteration   2: TearDown - generate new random price ladders
20.779 ns/op
Iteration   1: TearDown - generate new random price ladders
20.956 ns/op
Iteration   2: TearDown - generate new random price ladders
20.649 ns/op


Result "com.telamin.fluxtion.example.compile.aot.jmh.PriceLadderBenchmark.avgTime_BranchingProcessor":
  20.802 ns/op


# JMH version: 1.37
# VM version: JDK 21.0.5, OpenJDK 64-Bit Server VM, 21.0.5+11-LTS
# VM invoker: /Users/greghiggins/.sdkman/candidates/java/21.0.5-tem/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=51847 -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 2 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.telamin.fluxtion.example.compile.aot.jmh.PriceLadderBenchmark.avgTime_No_BranchingProcessor

# Run progress: 66.67% complete, ETA 00:01:21
# Warmup Fork: 1 of 1
# Warmup Iteration   1: Do Setup
TearDown - generate new random price ladders
20.554 ns/op
# Warmup Iteration   2: TearDown - generate new random price ladders
20.651 ns/op
Iteration   1: TearDown - generate new random price ladders
20.948 ns/op
Iteration   2: TearDown - generate new random price ladders
20.817 ns/op

# Run progress: 83.33% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: Do Setup
TearDown - generate new random price ladders
20.654 ns/op
# Warmup Iteration   2: TearDown - generate new random price ladders
20.673 ns/op
Iteration   1: TearDown - generate new random price ladders
21.022 ns/op
Iteration   2: TearDown - generate new random price ladders
20.836 ns/op


Result "com.telamin.fluxtion.example.compile.aot.jmh.PriceLadderBenchmark.avgTime_No_BranchingProcessor":
  20.929 ns/op


# Run complete. Total time: 00:04:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                            Mode  Cnt         Score   Error  Units
PriceLadderBenchmark.throughPut_BranchingProcessor  thrpt    2  48264493.868          ops/s
PriceLadderBenchmark.avgTime_BranchingProcessor      avgt    2        20.802          ns/op
PriceLadderBenchmark.avgTime_No_BranchingProcessor   avgt    2        20.929          ns/op

Process finished with exit code 0